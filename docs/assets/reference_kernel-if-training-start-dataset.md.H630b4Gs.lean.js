import{_ as a,c as i,a1 as n,o as e}from"./chunks/framework.CiOUwjDc.js";const d=JSON.parse('{"title":"학습 데이터","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/kernel-if-training-start-dataset.md","filePath":"ko/reference/kernel-if-training-start-dataset.md","lastUpdated":1745371375000}'),t={name:"reference/kernel-if-training-start-dataset.md"};function l(p,s,h,k,o,E){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="학습-데이터" tabindex="-1">학습 데이터 <a class="header-anchor" href="#학습-데이터" aria-label="Permalink to &quot;학습 데이터&quot;">​</a></h1><h2 id="개념" tabindex="-1">개념 <a class="header-anchor" href="#개념" aria-label="Permalink to &quot;개념&quot;">​</a></h2><p>학습 설정 파일의 <code>dataset_path</code> 아래에는 학습할 (이미지) 데이터와 레이블링이 들어가 있습니다. 기본적으로 레이블 파일을 찾아 그 안에 적힌 이미지의 경로를 찾아가는 방식입니다.</p><h2 id="데이터의-구성" tabindex="-1">데이터의 구성 <a class="header-anchor" href="#데이터의-구성" aria-label="Permalink to &quot;데이터의 구성&quot;">​</a></h2><p>데이터셋 폴더의 내용은 학습 설정 파일의 <code>training_type</code> 에 따라 다른 구성을 가지게 되며 각각의 경우에 대한 구성은 아래와 같습니다.</p><h3 id="classification-cl" tabindex="-1">Classification (CL) <a class="header-anchor" href="#classification-cl" aria-label="Permalink to &quot;Classification (CL)&quot;">​</a></h3><p>데이터셋 폴더내 아래 파일들이 존재합니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dataset_path</span></span>
<span class="line"><span>├─ label.txt</span></span>
<span class="line"><span>├─ train</span></span>
<span class="line"><span>│  └─ train.txt</span></span>
<span class="line"><span>└─ validation</span></span>
<span class="line"><span>   └─ validation.txt</span></span></code></pre></div><p><code>train.txt</code>은 학습에 대한 데이터이며, <code>validation.txt</code>는 검증에 대한 데이터 입니다. 또한 참고용으로 <code>label.txt</code>가 존재하는데, 이 파일에는 classification의 class 이름 목록이 적혀 있습니다. 일반적으로 여기 적힌 순서가 prediction 결과에 대한 index 값(모델의 아웃풋)이 됩니다.</p><p>각 이미지는 하나의 라인으로 표시되고 각 라인은 이미지 경로(image path)와 라벨(label) 루 구성되어 있습니다. image path는 컨테이너 내의 전체 경로이므로, 별도의 prefix나 base folder와의 조합은 필요 없습니다.</p><p>train.txt 예</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/mnt/image/NAS01/image/3/71/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_L_0_A.png VALVE_GOOD</span></span>
<span class="line"><span>/mnt/image/NAS01/image/3/71/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_R_0_A.png VALVE_BROKEN</span></span>
<span class="line"><span>...</span></span></code></pre></div><h3 id="regional-classification-rc" tabindex="-1">Regional Classification (RC) <a class="header-anchor" href="#regional-classification-rc" aria-label="Permalink to &quot;Regional Classification (RC)&quot;">​</a></h3><p>Regional classification(RC) 은 Classification(CL) 과 동일한 파일들이 존재하나 내용상 아래와 같은 다른 점이 있습니다.</p><ul><li>이미지당 여러개의 label 정보 존재 : 하나의 이미지에 대해 여러 개의 label 정보를 가질 수 있으며, 그 경우 동일한 이미지 경로를 가지는 여러 라인에 걸쳐 표기 됩니다.</li><li>영역(rectangle)과 label 판정 정보 : 각 label 정보는 영역에 대한 위치 정보와 해당 영역의 레이블의 판정 정보로 구성 됩니다.</li></ul><p>train.txt 예</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/mnt/image/NAS01/image/3/72/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_L_0_A.png VALVE_SCRATCHED true 100 100 150 150</span></span>
<span class="line"><span>/mnt/image/NAS01/image/3/72/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_L_0_A.png VALVE_SCRATCHED true 300 300 350 350</span></span>
<span class="line"><span>/mnt/image/NAS01/image/3/72/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_R_0_A.png VALVE_SCRATCHED false 100 100 150 150</span></span>
<span class="line"><span>/mnt/image/NAS01/image/3/72/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_R_0_A.png VALVE_SCRATCHED false 300 300 350 350</span></span>
<span class="line"><span>...</span></span></code></pre></div><h3 id="segmentation-seg-object-detection-od" tabindex="-1">Segmentation (SEG), Object Detection (OD) <a class="header-anchor" href="#segmentation-seg-object-detection-od" aria-label="Permalink to &quot;Segmentation (SEG), Object Detection (OD)&quot;">​</a></h3><p>Segmentation(SEG)와 Object Detection(OD) 그리고 Anomaly Detection(AD)의 경우 label format은 동일합니다.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dataset_path</span></span>
<span class="line"><span>├─ label.txt</span></span>
<span class="line"><span>├─ train</span></span>
<span class="line"><span>│  ├─ 1.json</span></span>
<span class="line"><span>│  ├─ 2.json</span></span>
<span class="line"><span>│  └─ 3.json</span></span>
<span class="line"><span>└─ validation</span></span>
<span class="line"><span>   ├─ 1.json</span></span>
<span class="line"><span>   ├─ 2.json</span></span>
<span class="line"><span>   └─ 3.json</span></span></code></pre></div><p>데이터셋 폴더 아래에 Train / Validation 폴더가 존재하고, 그 아래에 label file 들이 존재합니다.</p><p>label file 은 <a href="https://github.com/labelmeai/labelme/blob/main/examples/bbox_detection/data_annotated/2011_000003.json" target="_blank" rel="noreferrer">labelme format</a> 을 사용합니다. 앞 링크의 예제를 열어보면 flags 나 version, group_id 같은 meta field도 존재하는데 그런 meta field는 사용하지 않고 아래와 같은 형태로 사용하게 됩니다.</p><ul><li>shapes[].label : 기본정보에서 정의된 label_id</li><li>shapes[].shape_type : rectangle 또는 polygon</li><li>shapes[].points : shape type 에 대한 좌표 배열</li><li>shapes[].isgenerated : 해당 필드에 ‘true’/’false’ 가 들어가 있는 경우가 있을 수 있는데, 이것은 검증에 대한 결과로 생성된 label 을 의미하므로 학습에 활용할 여지가 있으면 활용해도 좋습니다.</li><li>shapes[].isroi : 프로젝트 모델타입 설정에서 ROI type을 지정한 경우, 해당 type이 shaps[].label_type 에 설정되어 rectangle로 전달되게 된다. 또한 해당 label에는 shapes[].isroi = ‘true’ 로 설정이 되므로 isroi가 true인 것은 ROI로 처리하면 된다.</li><li>imagePath : 이미지에 대한 경로입니다. Classficiation과 마찬가지로 도커 컨테이너내 전체 경로 입니다.</li></ul><p>label 파일 예</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;shapes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OD_VALVE_CRACK&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;shape_type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rectangle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;points&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          252.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          215.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          271.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          231.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;isgenerated&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;isroi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OD_VALVE_SCRATCH&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;shape_type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rectangle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;points&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          248.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          252.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          257.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          262.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;isgenerated&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;isroi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;imagePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/mnt/image/NAS01/image/3/71/L_VALVE_1/2024/1030/05/S5421E45626133463036_THERMOSTATIC_VALVE_L_0_A.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;image_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">88785</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="학습-가능한-이미지에-대한-접근" tabindex="-1">학습 가능한 이미지에 대한 접근 <a class="header-anchor" href="#학습-가능한-이미지에-대한-접근" aria-label="Permalink to &quot;학습 가능한 이미지에 대한 접근&quot;">​</a></h2><p>학습 가능한 이미지(<code>trainable_image_type</code>)란 다양한 방법으로 가공후 제공되는 학습 가능한 이미지 종류를 뜻합니다. 플렛폼에 존재하는 학습 가능한 이미지 목록은 플랫폼내 프로젝트 환경설정에서 정의 되며 학습시(혹은 검증시) model.json의 trainable_image_type 항목을 통해 전달됩니다. 특정 이미지 종류에 접근하는 경우 파일명의 뒷부분을 교체하여 사용하면 됩니다.</p><p>예를 들어 메인 이미지와 엑스레이 이미지를 사용하는 경우 프로젝트 환경설정에서 학습 가능한 이미지 종류에 &quot;_A.png&quot;, &quot;_X.png&quot; 를 설정하면 학습시(혹은 검증시) trainable_image_type 에 <code>[&quot;_A.png&quot;, &quot;_X.png&quot;]</code> 가 전달되고 엑스레이 이미지를 사용하는 경우 파일 이름의 뒷부분 _A.png를 _X.png로 교체하여 사용하면 됩니다.</p><h2 id="검증-validatioin-의-경우" tabindex="-1">검증(Validatioin) 의 경우 <a class="header-anchor" href="#검증-validatioin-의-경우" aria-label="Permalink to &quot;검증(Validatioin) 의 경우&quot;">​</a></h2><p>검증의 경우 <code>dataset_path</code> 아래에 train/validation 폴더중 <code>validation</code> 부분에만 데이터가 존재하고 나머지는 학습과 동일합니다.</p>`,30)]))}const c=a(t,[["render",l]]);export{d as __pageData,c as default};

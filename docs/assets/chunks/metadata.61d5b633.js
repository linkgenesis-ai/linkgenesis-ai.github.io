window.__VP_HASH_MAP__=JSON.parse("{\"blog_archives.md\":\"DxWhotw4\",\"blog_authors_sean.md\":\"CjjzfDGE\",\"blog_authors_writer.md\":\"CrSKRXuy\",\"blog_index.md\":\"BVTNOy3H\",\"blog_posts_2024_post1.md\":\"Ch4mZEqF\",\"blog_posts_2025_detr_paper_review.md\":\"B8giEylB\",\"blog_tags.md\":\"ys3c1ac8\",\"en_blog_archives.md\":\"D_nRCIHp\",\"en_blog_index.md\":\"DeoA9YQu\",\"en_blog_tags.md\":\"Ol3mG-jh\",\"en_index.md\":\"BAJpcpnC\",\"guide_dataset-append.md\":\"Dnw9Iii1\",\"guide_dataset-clone.md\":\"UEgEECTH\",\"guide_dataset-create.md\":\"D36ykvnm\",\"guide_dataset-delete.md\":\"BRYio2EB\",\"guide_dataset-detail.md\":\"BlDWSrOB\",\"guide_dataset-export.md\":\"C-uAmG9u\",\"guide_dataset-global.md\":\"CYul8EbB\",\"guide_dataset-import.md\":\"DGymqRLn\",\"guide_dataset-list.md\":\"BdaA8_6b\",\"guide_dataset-partial-delete.md\":\"l4E1Qk2G\",\"guide_dataset-update-meta.md\":\"BHpxaF3C\",\"guide_external-manage-dl-parameter.md\":\"Dph7RxHa\",\"guide_external-manage-modelset.md\":\"Bhn-hqJL\",\"guide_external-manage-rule-parameter.md\":\"YXDqe1ar\",\"guide_get-free-account.md\":\"U9DohwII\",\"guide_get-started.md\":\"C2XNi2Uu\",\"guide_intro-dataset.md\":\"B6NT6Ite\",\"guide_intro-external-service.md\":\"2cnVfUH2\",\"guide_intro-labeling.md\":\"w1OqdxGD\",\"guide_intro-project-settings.md\":\"DNTQiki_\",\"guide_intro-project.md\":\"DrJJ2Xq1\",\"guide_intro-service-status.md\":\"CjhfMAXc\",\"guide_intro-training-validation.md\":\"DH85ROGa\",\"guide_intro-vladops.md\":\"DxJW68iW\",\"guide_labeling-create-area-inference.md\":\"CISlLWye\",\"guide_labeling-create-live-inference.md\":\"C7Z5g7Kb\",\"guide_labeling-create-user-draw.md\":\"CbQBt-9w\",\"guide_labeling-create.md\":\"C-KVpqdW\",\"guide_labeling-delete.md\":\"Dqkh4XTB\",\"guide_labeling-modify.md\":\"Cp7NTFsU\",\"guide_labeling-search.md\":\"Bq1hh_Z4\",\"guide_project-create.md\":\"CiZ5a4Y5\",\"guide_project-list.md\":\"DLOO3-sf\",\"guide_project-settings-access-control.md\":\"Ds9LACXH\",\"guide_project-settings-annotation-type.md\":\"BKJZCFz7\",\"guide_project-settings-defect-type.md\":\"Cn3C72QN\",\"guide_project-settings-image-meta.md\":\"DXGz_7RI\",\"guide_project-settings-info.md\":\"BW11--K7\",\"guide_project-settings-model-type.md\":\"Dj3e7oGS\",\"guide_project-settings-modelset-deploy.md\":\"CL67JFMw\",\"guide_project-settings-modelset-type.md\":\"C49AOpwt\",\"guide_project-settings-service-location.md\":\"CRDGDLUa\",\"guide_project-settings-system-settings.md\":\"Bss8wS31\",\"guide_training-activated-model.md\":\"DazAZYyU\",\"guide_training-model-training.md\":\"DqrKa0En\",\"guide_training-model-validation.md\":\"BE4YzC5g\",\"guide_training-multi-model-training.md\":\"B63U99wO\",\"guide_training-training-kernel.md\":\"CoXZMvnZ\",\"index.md\":\"Dp2RGlfp\",\"reference_ext-system-integration-overview.md\":\"BtylwewX\",\"reference_kernel-if-training-end-result.md\":\"B28OlCsM\",\"reference_kernel-if-training-end-state.md\":\"BYU8DA7D\",\"reference_kernel-if-training-end.md\":\"DVoAv7rv\",\"reference_kernel-if-training-start-dataset.md\":\"H630b4Gs\",\"reference_kernel-if-training-start-model-json.md\":\"ByBg6Vel\",\"reference_kernel-if-training-start-vlad-training-json.md\":\"DacRxxIf\",\"reference_kernel-if-training-start.md\":\"Nl9-QcVL\",\"reference_kernel-if-validation-end-result.md\":\"CDnh-eIU\",\"reference_kernel-if-validation-end-state.md\":\"DwifDSCs\",\"reference_kernel-if-validation-end.md\":\"C1gJ42nO\",\"reference_kernel-overview.md\":\"D0ffCkfL\",\"reference_kernel-packaging-kernel.md\":\"CN64Qm5t\",\"reference_kernel-packaging-schema.md\":\"D83d867F\",\"reference_kernel-packaging.md\":\"9X7fb8Wx\",\"reference_overview.md\":\"DRJOLdTv\",\"reference_project-key.md\":\"0nu11Snn\"}");function deserializeFunctions(r){return Array.isArray(r)?r.map(deserializeFunctions):typeof r=="object"&&r!==null?Object.keys(r).reduce((t,n)=>(t[n]=deserializeFunctions(r[n]),t),{}):typeof r=="string"&&r.startsWith("_vp-fn_")?new Function(`return ${r.slice(7)}`)():r};window.__VP_SITE_DATA__=deserializeFunctions(JSON.parse("{\"lang\":\"en-US\",\"dir\":\"ltr\",\"title\":\"VLAD Ops\",\"description\":\"A VitePress site\",\"base\":\"/\",\"head\":[],\"router\":{\"prefetchLinks\":true},\"appearance\":true,\"themeConfig\":{\"blog\":{\"defaultAuthor\":\"Writer\",\"categoryIcons\":{\"article\":\"i-[carbon/notebook]\",\"tutorial\":\"i-[carbon/book]\",\"document\":\"i-[carbon/document]\"},\"tagIcons\":{\"github\":\"i-[carbon/logo-github]\",\"vue\":\"i-[carbon/logo-vue]\",\"web development\":\"i-[carbon/development]\",\"javascript\":\"i-[logos/javascript]\",\"html\":\"i-[logos/html-5]\"},\"dateConfig\":{\"format\":\"yyyy/MM/dd\",\"locale\":{\"code\":\"en-US\",\"formatDistance\":\"_vp-fn_(token, count, options) => {\\n  let result;\\n\\n  const tokenValue = formatDistanceLocale[token];\\n  if (typeof tokenValue === \\\"string\\\") {\\n    result = tokenValue;\\n  } else if (count === 1) {\\n    result = tokenValue.one;\\n  } else {\\n    result = tokenValue.other.replace(\\\"{{count}}\\\", count.toString());\\n  }\\n\\n  if (options?.addSuffix) {\\n    if (options.comparison && options.comparison > 0) {\\n      return \\\"in \\\" + result;\\n    } else {\\n      return result + \\\" ago\\\";\\n    }\\n  }\\n\\n  return result;\\n}\",\"formatLong\":{\"date\":\"_vp-fn_(options = {}) => {\\n    // TODO: Remove String()\\n    const width = options.width ? String(options.width) : args.defaultWidth;\\n    const format = args.formats[width] || args.formats[args.defaultWidth];\\n    return format;\\n  }\",\"time\":\"_vp-fn_(options = {}) => {\\n    // TODO: Remove String()\\n    const width = options.width ? String(options.width) : args.defaultWidth;\\n    const format = args.formats[width] || args.formats[args.defaultWidth];\\n    return format;\\n  }\",\"dateTime\":\"_vp-fn_(options = {}) => {\\n    // TODO: Remove String()\\n    const width = options.width ? String(options.width) : args.defaultWidth;\\n    const format = args.formats[width] || args.formats[args.defaultWidth];\\n    return format;\\n  }\"},\"formatRelative\":\"_vp-fn_(token, _date, _baseDate, _options) =>\\n  formatRelativeLocale[token]\",\"localize\":{\"ordinalNumber\":\"_vp-fn_(dirtyNumber, _options) => {\\n  const number = Number(dirtyNumber);\\n\\n  // If ordinal numbers depend on context, for example,\\n  // if they are different for different grammatical genders,\\n  // use `options.unit`.\\n  //\\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\\n  // 'day', 'hour', 'minute', 'second'.\\n\\n  const rem100 = number % 100;\\n  if (rem100 > 20 || rem100 < 10) {\\n    switch (rem100 % 10) {\\n      case 1:\\n        return number + \\\"st\\\";\\n      case 2:\\n        return number + \\\"nd\\\";\\n      case 3:\\n        return number + \\\"rd\\\";\\n    }\\n  }\\n  return number + \\\"th\\\";\\n}\",\"era\":\"_vp-fn_(value, options) => {\\n    const context = options?.context ? String(options.context) : \\\"standalone\\\";\\n\\n    let valuesArray;\\n    if (context === \\\"formatting\\\" && args.formattingValues) {\\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\\n      const width = options?.width ? String(options.width) : defaultWidth;\\n\\n      valuesArray =\\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\\n    } else {\\n      const defaultWidth = args.defaultWidth;\\n      const width = options?.width ? String(options.width) : args.defaultWidth;\\n\\n      valuesArray = args.values[width] || args.values[defaultWidth];\\n    }\\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\\n\\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\\n    return valuesArray[index];\\n  }\",\"quarter\":\"_vp-fn_(value, options) => {\\n    const context = options?.context ? String(options.context) : \\\"standalone\\\";\\n\\n    let valuesArray;\\n    if (context === \\\"formatting\\\" && args.formattingValues) {\\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\\n      const width = options?.width ? String(options.width) : defaultWidth;\\n\\n      valuesArray =\\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\\n    } else {\\n      const defaultWidth = args.defaultWidth;\\n      const width = options?.width ? String(options.width) : args.defaultWidth;\\n\\n      valuesArray = args.values[width] || args.values[defaultWidth];\\n    }\\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\\n\\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\\n    return valuesArray[index];\\n  }\",\"month\":\"_vp-fn_(value, options) => {\\n    const context = options?.context ? String(options.context) : \\\"standalone\\\";\\n\\n    let valuesArray;\\n    if (context === \\\"formatting\\\" && args.formattingValues) {\\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\\n      const width = options?.width ? String(options.width) : defaultWidth;\\n\\n      valuesArray =\\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\\n    } else {\\n      const defaultWidth = args.defaultWidth;\\n      const width = options?.width ? String(options.width) : args.defaultWidth;\\n\\n      valuesArray = args.values[width] || args.values[defaultWidth];\\n    }\\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\\n\\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\\n    return valuesArray[index];\\n  }\",\"day\":\"_vp-fn_(value, options) => {\\n    const context = options?.context ? String(options.context) : \\\"standalone\\\";\\n\\n    let valuesArray;\\n    if (context === \\\"formatting\\\" && args.formattingValues) {\\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\\n      const width = options?.width ? String(options.width) : defaultWidth;\\n\\n      valuesArray =\\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\\n    } else {\\n      const defaultWidth = args.defaultWidth;\\n      const width = options?.width ? String(options.width) : args.defaultWidth;\\n\\n      valuesArray = args.values[width] || args.values[defaultWidth];\\n    }\\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\\n\\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\\n    return valuesArray[index];\\n  }\",\"dayPeriod\":\"_vp-fn_(value, options) => {\\n    const context = options?.context ? String(options.context) : \\\"standalone\\\";\\n\\n    let valuesArray;\\n    if (context === \\\"formatting\\\" && args.formattingValues) {\\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\\n      const width = options?.width ? String(options.width) : defaultWidth;\\n\\n      valuesArray =\\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\\n    } else {\\n      const defaultWidth = args.defaultWidth;\\n      const width = options?.width ? String(options.width) : args.defaultWidth;\\n\\n      valuesArray = args.values[width] || args.values[defaultWidth];\\n    }\\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\\n\\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\\n    return valuesArray[index];\\n  }\"},\"match\":{\"ordinalNumber\":\"_vp-fn_(string, options = {}) => {\\n    const matchResult = string.match(args.matchPattern);\\n    if (!matchResult) return null;\\n    const matchedString = matchResult[0];\\n\\n    const parseResult = string.match(args.parsePattern);\\n    if (!parseResult) return null;\\n    let value = args.valueCallback\\n      ? args.valueCallback(parseResult[0])\\n      : parseResult[0];\\n\\n    // [TODO] I challenge you to fix the type\\n    value = options.valueCallback ? options.valueCallback(value) : value;\\n\\n    const rest = string.slice(matchedString.length);\\n\\n    return { value, rest };\\n  }\",\"era\":\"_vp-fn_(string, options = {}) => {\\n    const width = options.width;\\n\\n    const matchPattern =\\n      (width && args.matchPatterns[width]) ||\\n      args.matchPatterns[args.defaultMatchWidth];\\n    const matchResult = string.match(matchPattern);\\n\\n    if (!matchResult) {\\n      return null;\\n    }\\n    const matchedString = matchResult[0];\\n\\n    const parsePatterns =\\n      (width && args.parsePatterns[width]) ||\\n      args.parsePatterns[args.defaultParseWidth];\\n\\n    const key = Array.isArray(parsePatterns)\\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\\n      : // [TODO] -- I challenge you to fix the type\\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\\n\\n    let value;\\n\\n    value = args.valueCallback ? args.valueCallback(key) : key;\\n    value = options.valueCallback\\n      ? // [TODO] -- I challenge you to fix the type\\n        options.valueCallback(value)\\n      : value;\\n\\n    const rest = string.slice(matchedString.length);\\n\\n    return { value, rest };\\n  }\",\"quarter\":\"_vp-fn_(string, options = {}) => {\\n    const width = options.width;\\n\\n    const matchPattern =\\n      (width && args.matchPatterns[width]) ||\\n      args.matchPatterns[args.defaultMatchWidth];\\n    const matchResult = string.match(matchPattern);\\n\\n    if (!matchResult) {\\n      return null;\\n    }\\n    const matchedString = matchResult[0];\\n\\n    const parsePatterns =\\n      (width && args.parsePatterns[width]) ||\\n      args.parsePatterns[args.defaultParseWidth];\\n\\n    const key = Array.isArray(parsePatterns)\\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\\n      : // [TODO] -- I challenge you to fix the type\\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\\n\\n    let value;\\n\\n    value = args.valueCallback ? args.valueCallback(key) : key;\\n    value = options.valueCallback\\n      ? // [TODO] -- I challenge you to fix the type\\n        options.valueCallback(value)\\n      : value;\\n\\n    const rest = string.slice(matchedString.length);\\n\\n    return { value, rest };\\n  }\",\"month\":\"_vp-fn_(string, options = {}) => {\\n    const width = options.width;\\n\\n    const matchPattern =\\n      (width && args.matchPatterns[width]) ||\\n      args.matchPatterns[args.defaultMatchWidth];\\n    const matchResult = string.match(matchPattern);\\n\\n    if (!matchResult) {\\n      return null;\\n    }\\n    const matchedString = matchResult[0];\\n\\n    const parsePatterns =\\n      (width && args.parsePatterns[width]) ||\\n      args.parsePatterns[args.defaultParseWidth];\\n\\n    const key = Array.isArray(parsePatterns)\\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\\n      : // [TODO] -- I challenge you to fix the type\\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\\n\\n    let value;\\n\\n    value = args.valueCallback ? args.valueCallback(key) : key;\\n    value = options.valueCallback\\n      ? // [TODO] -- I challenge you to fix the type\\n        options.valueCallback(value)\\n      : value;\\n\\n    const rest = string.slice(matchedString.length);\\n\\n    return { value, rest };\\n  }\",\"day\":\"_vp-fn_(string, options = {}) => {\\n    const width = options.width;\\n\\n    const matchPattern =\\n      (width && args.matchPatterns[width]) ||\\n      args.matchPatterns[args.defaultMatchWidth];\\n    const matchResult = string.match(matchPattern);\\n\\n    if (!matchResult) {\\n      return null;\\n    }\\n    const matchedString = matchResult[0];\\n\\n    const parsePatterns =\\n      (width && args.parsePatterns[width]) ||\\n      args.parsePatterns[args.defaultParseWidth];\\n\\n    const key = Array.isArray(parsePatterns)\\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\\n      : // [TODO] -- I challenge you to fix the type\\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\\n\\n    let value;\\n\\n    value = args.valueCallback ? args.valueCallback(key) : key;\\n    value = options.valueCallback\\n      ? // [TODO] -- I challenge you to fix the type\\n        options.valueCallback(value)\\n      : value;\\n\\n    const rest = string.slice(matchedString.length);\\n\\n    return { value, rest };\\n  }\",\"dayPeriod\":\"_vp-fn_(string, options = {}) => {\\n    const width = options.width;\\n\\n    const matchPattern =\\n      (width && args.matchPatterns[width]) ||\\n      args.matchPatterns[args.defaultMatchWidth];\\n    const matchResult = string.match(matchPattern);\\n\\n    if (!matchResult) {\\n      return null;\\n    }\\n    const matchedString = matchResult[0];\\n\\n    const parsePatterns =\\n      (width && args.parsePatterns[width]) ||\\n      args.parsePatterns[args.defaultParseWidth];\\n\\n    const key = Array.isArray(parsePatterns)\\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\\n      : // [TODO] -- I challenge you to fix the type\\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\\n\\n    let value;\\n\\n    value = args.valueCallback ? args.valueCallback(key) : key;\\n    value = options.valueCallback\\n      ? // [TODO] -- I challenge you to fix the type\\n        options.valueCallback(value)\\n      : value;\\n\\n    const rest = string.slice(matchedString.length);\\n\\n    return { value, rest };\\n  }\"},\"options\":{\"weekStartsOn\":0,\"firstWeekContainsDate\":1}}},\"giscus\":{\"repo\":\"\",\"repoId\":\"\",\"category\":\"General\",\"categoryId\":\"\",\"mapping\":\"pathname\",\"inputPosition\":\"top\",\"lightTheme\":\"light\",\"darkTheme\":\"transparent_dark\",\"defaultEnable\":false}}},\"locales\":{\"root\":{\"label\":\"한국어\",\"lang\":\"ko-KR\",\"description\":\"VLAD Ops는 머신러닝 통합 솔루션입니다.\",\"themeConfig\":{\"nav\":[{\"text\":\"제품 가이드\",\"link\":\"/guide/intro-vladops\",\"activeMatch\":\"/guide/\"},{\"text\":\"개발자 문서\",\"link\":\"/reference/overview\",\"activeMatch\":\"/reference/\"},{\"text\":\"블로그\",\"activeMatch\":\"/blog/\",\"items\":[{\"text\":\"Blog Home\",\"link\":\"/blog/\",\"activeMatch\":\"/blog/$\"},{\"text\":\"Archives\",\"link\":\"/blog/archives\",\"activeMatch\":\"/blog/archives\"}]}],\"sidebar\":{\"/guide/\":{\"base\":\"/guide/\",\"items\":[{\"text\":\"소개\",\"link\":\"intro-vladops\",\"collapsed\":false,\"items\":[{\"text\":\"VLAD Ops란?\",\"link\":\"intro-vladops\"},{\"text\":\"VLAD Ops 사용하기\",\"link\":\"get-started\"},{\"text\":\"체험 계정 신청하기\",\"link\":\"get-free-account\"}]},{\"text\":\"프로젝트 관리\",\"link\":\"intro-project\",\"collapsed\":false,\"items\":[{\"text\":\"프로젝트 목록\",\"link\":\"project-list\"},{\"text\":\"프로젝트 생성\",\"link\":\"project-create\"},{\"text\":\"프로젝트 설정\",\"link\":\"intro-project-settings\",\"collapsed\":false,\"items\":[{\"text\":\"프로젝트 정보 확인 및 수정\",\"link\":\"project-settings-info\"},{\"text\":\"접근 권한 관리\",\"link\":\"project-settings-access-control\"},{\"text\":\"이미지 메타 데이터 설정\",\"link\":\"project-settings-image-meta\"},{\"text\":\"어노테이션 타입 설정\",\"link\":\"project-settings-annotation-type\"},{\"text\":\"모델 타입 설정\",\"link\":\"project-settings-model-type\"},{\"text\":\"모델셋 타입 설정\",\"link\":\"project-settings-modelset-type\"},{\"text\":\"모델셋 배포 관리 설정\",\"link\":\"project-settings-modelset-deploy\"},{\"text\":\"불량 유형 설정\",\"link\":\"project-settings-defect-type\"},{\"text\":\"서비스 위치 설정\",\"link\":\"project-settings-service-location\"},{\"text\":\"시스템 설정\",\"link\":\"project-settings-system-settings\"}]}]},{\"text\":\"데이터 관리\",\"link\":\"intro-dataset\",\"collapsed\":false,\"items\":[{\"text\":\"실시간 업로드\",\"link\":\"dataset-global\"},{\"text\":\"데이터 가져오기\",\"link\":\"dataset-import\"},{\"text\":\"데이터셋 관리\",\"link\":\"dataset-list\"},{\"text\":\"데이터셋 상세 정보\",\"link\":\"dataset-detail\"},{\"text\":\"데이터셋 복제\",\"link\":\"dataset-clone\"},{\"text\":\"데이터셋 삭제\",\"link\":\"dataset-delete\"},{\"text\":\"데이터 내보내기\",\"link\":\"dataset-export\"},{\"text\":\"이미지 메타 업데이트\",\"link\":\"dataset-update-meta\"},{\"text\":\"신규 데이터셋 생성\",\"link\":\"dataset-create\"},{\"text\":\"기존 데이터셋에 추가\",\"link\":\"dataset-append\"},{\"text\":\"이미지 부분 삭제\",\"link\":\"dataset-partial-delete\"}]},{\"text\":\"레이블링\",\"link\":\"intro-labeling\",\"collapsed\":false,\"items\":[{\"text\":\"이미지 조회\",\"link\":\"labeling-search\"},{\"text\":\"어노테이션 작성\",\"link\":\"labeling-create\",\"collapsed\":false,\"items\":[{\"text\":\"사용자 직접 작성\",\"link\":\"labeling-create-user-draw\"},{\"text\":\"실시간 추론 결과 사용\",\"link\":\"labeling-create-live-inference\"},{\"text\":\"자동 영역 추론 결과 사용\",\"link\":\"labeling-create-area-inference\"}]},{\"text\":\"어노테이션 수정\",\"link\":\"labeling-modify\"},{\"text\":\"어노테이션 삭제\",\"link\":\"labeling-delete\"}]},{\"text\":\"학습 및 검증\",\"link\":\"intro-training-validation\",\"collapsed\":false,\"items\":[{\"text\":\"학습 커널 관리\",\"link\":\"training-training-kernel\"},{\"text\":\"모델 학습 관리\",\"link\":\"training-model-training\"},{\"text\":\"모델 검증 목록\",\"link\":\"training-model-validation\"},{\"text\":\"활성 모델\",\"link\":\"training-activated-model\"}]},{\"text\":\"외부 서비스 연동 관리\",\"link\":\"intro-external-service\"},{\"text\":\"서비스 상태 모니터링\",\"link\":\"intro-service-status\",\"collapsed\":false}]},\"/reference/\":{\"base\":\"/reference/\",\"items\":[{\"text\":\"시작하기\",\"collapsed\":false,\"items\":[{\"text\":\"개요\",\"link\":\"overview\"},{\"text\":\"프로젝트 키 확인하기\",\"link\":\"project-key\"}]},{\"text\":\"학습 커널\",\"items\":[{\"text\":\"모델 학습 환경\",\"link\":\"kernel-overview\"},{\"text\":\"학습의 시작\",\"link\":\"kernel-if-training-start\",\"items\":[{\"text\":\"학습 설정 파일\",\"link\":\"kernel-if-training-start-vlad-training-json\"},{\"text\":\"모델 설정 파일\",\"link\":\"kernel-if-training-start-model-json\"},{\"text\":\"학습 데이터\",\"link\":\"kernel-if-training-start-dataset\"}]},{\"text\":\"학습의 진행\",\"link\":\"kernel-if-training-end\",\"items\":[{\"text\":\"학습 상태\",\"link\":\"kernel-if-training-end-state\"},{\"text\":\"학습 결과\",\"link\":\"kernel-if-training-end-result\"}]},{\"text\":\"검증의 진행\",\"link\":\"kernel-if-validation-end\",\"items\":[{\"text\":\"검증 상태\",\"link\":\"kernel-if-validation-end-state\"},{\"text\":\"검증 결과\",\"link\":\"kernel-if-validation-end-result\"}]},{\"text\":\"학습 커널 패키징\",\"link\":\"kernel-packaging\",\"items\":[{\"text\":\"커널 파일\",\"link\":\"kernel-packaging-kernel\"},{\"text\":\"모델 설정 스키마\",\"link\":\"kernel-packaging-schema\"}]}]},{\"text\":\"외부 시스템 연동\",\"items\":[{\"text\":\"개요\",\"link\":\"ext-system-integration-overview\"}]}]},\"/blog/\":{\"base\":\"/blog/\",\"items\":[{\"text\":\"방문을 환영합니다\",\"link\":\"hello\"}]}},\"docFooter\":{\"prev\":\"이전\",\"next\":\"다음\"},\"outline\":{\"label\":\"이 페이지 목차\"},\"lastUpdated\":{\"text\":\"업데이트 날짜\"},\"langMenuLabel\":\"언어 변경\",\"returnToTopLabel\":\"맨 위로 돌아가기\",\"sidebarMenuLabel\":\"사이드바 메뉴\",\"darkModeSwitchLabel\":\"다크 모드\",\"lightModeSwitchTitle\":\"라이트 모드로 변경\",\"darkModeSwitchTitle\":\"다크 모드로 변경\"},\"head\":[[\"meta\",{\"property\":\"og:title\",\"content\":\"VLAD Ops | 머신러닝 통합 솔루션\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"VLAD Ops는 머신러닝 통합 솔루션입니다.\"}],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://linkgenesis-ai.github.io/\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"ko_KR\"}],[\"meta\",{\"name\":\"apple-mobile-web-app-title\",\"content\":\"VLAD Ops | 머신러닝 통합 솔루션\"}]]},\"en\":{\"label\":\"English\",\"lang\":\"en-US\",\"description\":\"VLAD Ops is a machine learning integrated solution.\",\"themeConfig\":{\"nav\":[{\"text\":\"Blog\",\"activeMatch\":\"/en/blog/\",\"items\":[{\"text\":\"Blog Home\",\"link\":\"/en/blog/\",\"activeMatch\":\"/en/blog/$\"},{\"text\":\"Archives\",\"link\":\"/en/blog/archives\",\"activeMatch\":\"/en/blog/archives\"}]}],\"sidebar\":{\"/en/guide/\":{\"base\":\"/en/guide/\",\"items\":[{\"text\":\"Introduction\"}]},\"/en/reference/\":{\"base\":\"/en/reference/\",\"items\":[{\"text\":\"Reference\"}]}}},\"head\":[[\"meta\",{\"property\":\"og:title\",\"content\":\"VLAD Ops | Machine Learning Integrated Solutions\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"VLAD Ops is a machine learning integrated solution.\"}],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://linkgenesis-ai.github.io/en/\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en_US\"}],[\"meta\",{\"name\":\"apple-mobile-web-app-title\",\"content\":\"VLAD Ops | Machine Learning Integrated Solutions\"}]]}},\"scrollOffset\":134,\"cleanUrls\":true}"));
import{_ as s,c as a,a1 as t,o as e}from"./chunks/framework.CiOUwjDc.js";const c=JSON.parse('{"title":"학습 진행 상태","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/kernel-if-training-end-state.md","filePath":"ko/reference/kernel-if-training-end-state.md","lastUpdated":1745371375000}'),n={name:"reference/kernel-if-training-end-state.md"};function l(h,i,p,o,k,d){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="학습-진행-상태" tabindex="-1">학습 진행 상태 <a class="header-anchor" href="#학습-진행-상태" aria-label="Permalink to &quot;학습 진행 상태&quot;">​</a></h1><h2 id="개요" tabindex="-1">개요 <a class="header-anchor" href="#개요" aria-label="Permalink to &quot;개요&quot;">​</a></h2><p>학습 진행 상태를 플랫폼에 전달하는 방법은 rabbitmq message queue에 상태 메시지를 던지는 형태로 이루어 집니다. Rabbitmq message queue에 대한 정보는 학습 설정 파일에서 확인 할 수 있습니다.</p><ul><li><code>message_host</code></li><li><code>message_port</code></li><li><code>message_id</code></li><li><code>message_pw</code></li><li><code>queue_name</code></li></ul><h2 id="상태-메세지" tabindex="-1">상태 메세지 <a class="header-anchor" href="#상태-메세지" aria-label="Permalink to &quot;상태 메세지&quot;">​</a></h2><h3 id="cmd" tabindex="-1">cmd <a class="header-anchor" href="#cmd" aria-label="Permalink to &quot;cmd&quot;">​</a></h3><p><code>training_status</code> | <code>validation_status</code></p><p>어떤 command인지 구분하는 값입니다.</p><p>상태 전달 메세지는 학습 진행 상태와 검증 진행 상태로 나눠지고 학습/검증이 어떤 것에 대한 것인지 구분하는 식별자가 반드시 포함 되어야 합니다.</p><p><strong>학습/검증에 따라 사용되는 CMD 및 식별자</strong></p><ul><li>학습 : <code>cmd: training_status</code>, <code>model_id: 모델 id</code></li><li>검증 : <code>cmd: validation_status</code>, <code>validation_id: 검증 id</code></li></ul><h3 id="status" tabindex="-1">status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;status&quot;">​</a></h3><p><code>training_ing</code> | <code>training_done</code> | <code>training_error</code></p><p>첫 &quot;training_ing&quot;을 받았을때 학습이 시작된것으로 인식하고, 그 이전은 &quot;대기중&quot; 상태로 표시됩니다.</p><p>&quot;training_ing&quot;은 현재 step의 진행 상태(percentage)를 사용자에게 보여주기 위해 매 step 마다 보내는 메시지입니다.</p><p>학습이 끝난 시점에 &quot;training_done&quot;을 보내고 종료해야 합니다. 그렇지 않으면 비정상 종료로 인식하게 됩니다. (&quot;training_done&quot;의 경우 &quot;model_id&quot;만 있으면 됩니다.)</p><p>에러 발생시에는 &quot;training_error&quot;를 &quot;message&quot; 필드와 함께 던져서 에러가 발생했음을 인식하게 할 수 있습니다. (error 처리 이후 &quot;training_ing&quot;나 &quot;training_done 을 보내도 처리되지 않습니다.)</p><h3 id="project-key" tabindex="-1">project_key <a class="header-anchor" href="#project-key" aria-label="Permalink to &quot;project_key&quot;">​</a></h3><p><code>학습 설정 파일내 project_key</code></p><p>학습을 진행하고 있는 프로젝트의 인증 키입니다. 필수 데이터이며 학습 설정 파일에 정의 되어 있는 &quot;project_key&quot; 를 전달해야 합니다.</p><h3 id="model-id" tabindex="-1">model_id <a class="header-anchor" href="#model-id" aria-label="Permalink to &quot;model_id&quot;">​</a></h3><p><code>학습 설정 파일내 model_id</code></p><p>학습을 진행하고 있는 모델에 대한 식별자입니다. 필수 데이터이며 학습 설정 파일에 정의 되어 있는 &quot;model_id&quot; 를 전달해야 합니다.</p><p>검증의 경우 <code>validation_id</code> 입니다.</p><h3 id="message" tabindex="-1">message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;message&quot;">​</a></h3><p><code>text message</code></p><p>에러 발생에 대한 메시지입니다. 사용자에게 보여줄 메시지이므로 최대한 친절한 메시지를 포함하는 것이 좋습니다.</p><p>예) 학습용 이미지의 크기가 적절하지 않습니다. 3000x2000을 기대했는데, 300x200이 제공 되었습니다</p><h3 id="percentage" tabindex="-1">percentage <a class="header-anchor" href="#percentage" aria-label="Permalink to &quot;percentage&quot;">​</a></h3><p><code>0~100 사이의 숫자</code></p><p>0~100 사이의 값으로 사용자에게 보여줄 진행율 입니다. 참고용 이므로 엄격하게 계산할 필요는 없습니다.</p><h3 id="step" tabindex="-1">step <a class="header-anchor" href="#step" aria-label="Permalink to &quot;step&quot;">​</a></h3><p><code>학습중인 현재 step 번호</code></p><p>현재 학습중인 step 번호 입니다.</p><h2 id="학습-진행" tabindex="-1">학습 진행 <a class="header-anchor" href="#학습-진행" aria-label="Permalink to &quot;학습 진행&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cmd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;training_status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;project_key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">project_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;model_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">model_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;training_ing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;percentage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">percentage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;step&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="학습-완료" tabindex="-1">학습 완료 <a class="header-anchor" href="#학습-완료" aria-label="Permalink to &quot;학습 완료&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cmd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;training_status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;project_key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">project_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;model_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">model_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;training_done&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="학습-에러" tabindex="-1">학습 에러 <a class="header-anchor" href="#학습-에러" aria-label="Permalink to &quot;학습 에러&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cmd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;training_status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;project_key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">project_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;model_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">model_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;training_error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="학습-그래프" tabindex="-1">학습 그래프 <a class="header-anchor" href="#학습-그래프" aria-label="Permalink to &quot;학습 그래프&quot;">​</a></h2><p><code>&quot;model_write_path&quot;/save/metrics</code> 아래에 log file을 생성하면 플랫폼에서 해당 데이터를 읽어 학습 그래프로 표시하게 됩니다.</p><p>여러 metric을 추적하려면 여러 log file을 생성하면 됩니다.</p><p>각 log file의 포멧과 규칙은 아래와 같습니다.</p><ul><li>첫 라인에 필드명을 포함해야 합니다.</li><li>첫 컬럼은 graph 의 시간축(x값) 입니다.</li><li>두번째 이후의 컬럼들은 각각 다른 색상으로 표현되는 graph 의 y값 입니다.</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Main axis name, graph1 name, graph2 name</span></span>
<span class="line"><span>1, 0.2, 0.2</span></span>
<span class="line"><span>2, 0.3, 0.25</span></span>
<span class="line"><span>3, 0.4, 0.4</span></span></code></pre></div>`,46)]))}const E=s(n,[["render",l]]);export{c as __pageData,E as default};
